import discord
from discord.ext import tasks, commands
import asyncio
import csv
import datetime
import os
import pytz

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = "–í–°–¢–ê–í–¨_–°–í–û–ô_–¢–û–ö–ï–ù_–ë–û–¢–ê"  # –≤—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω –∏–∑ Discord Developer Portal
KILL_LOG_PATH = r"/91.218.113.132_7340/Deadside/Saved/actual1/deathlogs/world_0"
STATS_CHANNEL_ID = 1432119029518303454     # –∫–∞–Ω–∞–ª –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
KILLFEED_CHANNEL_ID = 1432119029518303454  # –∫–∞–Ω–∞–ª –¥–ª—è –∫–∏–ª-—á–∞—Ç–∞ (–º–æ–∂–Ω–æ –¥—Ä—É–≥–æ–π ID)
TIMEZONE = pytz.timezone("Europe/Moscow")

intents = discord.Intents.default()
intents.messages = True

bot = commands.Bot(command_prefix="!", intents=intents)

# === –§–£–ù–ö–¶–ò–ò ===
def parse_log_line(line):
    parts = line.strip().split(";")
    if len(parts) < 8:
        return None
    return {
        "time": parts[0],
        "killer": parts[1],
        "victim": parts[3],
        "weapon": parts[5],
        "distance": parts[7]
    }

def load_kill_data():
    kills = []
    if not os.path.exists(KILL_LOG_PATH):
        return kills

    with open(KILL_LOG_PATH, "r", encoding="utf-8", errors="ignore") as f:
        for line in f:
            if parsed := parse_log_line(line):
                kills.append(parsed)
    return kills[-10:]  # –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —É–±–∏–π—Å—Ç–≤

def build_killfeed_embed(kills):
    embed = discord.Embed(
        title="üíÄ –õ–µ–Ω—Ç–∞ —É–±–∏–π—Å—Ç–≤ ‚Äî –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–±—ã—Ç–∏–π",
        color=discord.Color.red(),
        timestamp=datetime.datetime.now(TIMEZONE)
    )
    for k in kills:
        embed.add_field(
            name=f"üí• {k['killer']} —É–±–∏–ª {k['victim']}",
            value=f"üî´ –û—Ä—É–∂–∏–µ: **{k['weapon']}**\nüìè –î–∏—Å—Ç–∞–Ω—Ü–∏—è: **{k['distance']}–º**\nüïì –í—Ä–µ–º—è: {k['time']}",
            inline=False
        )
    embed.set_footer(text="–û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É (–≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞ ‚Äî –ú–æ—Å–∫–≤–∞)")
    return embed

# === –ó–ê–ü–£–°–ö ===
@bot.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}")
    update_killfeed.start()

@tasks.loop(minutes=1)
async def update_killfeed():
    try:
        kills = load_kill_data()
        channel = bot.get_channel(KILLFEED_CHANNEL_ID)
        if not channel:
            print("‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return

        embed = build_killfeed_embed(kills)
        async for msg in channel.history(limit=1):
            await msg.edit(embed=embed)
            break
        else:
            await channel.send(embed=embed)

        print("‚úÖ –õ–µ–Ω—Ç–∞ —É–±–∏–π—Å—Ç–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {e}")

bot.run(TOKEN)
